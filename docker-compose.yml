# docker-compose.yml
version: '3'
networks:
  prometheus_net:
    ipam:
      driver: default
      config:
        - subnet: "172.16.16.0/24"
services:
    prometheus:
        image: prom/prometheus
        container_name: prometheus
        # If running on a 32-bit Raspberry Pi, use:
        # image: prom/prometheus:v1.7.2
        # build: ./prometheus
        volumes:
            - prometheus_data:/prometheus
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
            - ./prometheus/alert.rules:/etc/prometheus/alert.rules 
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time=1y'
            - '--web.enable-lifecycle'
        ports:
            - "9090:9090"
        restart: always
        networks:
          - prometheus_net
#    node-exporter:
#        container_name: node-exporter
#        image: prom/node-exporter-linux-armv7
#        restart: on-failure
    cadvisor:
      image: gcr.io/cadvisor/cadvisor-arm64:v0.47.0
      container_name: cadvisor
      privileged: true
      restart: always
      volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      devices:
      - /dev/kmsg
        # ports: ["9091:8080"]
      networks:
        - prometheus_net
    grafana:
        container_name: grafana
        image: grafana/grafana:latest
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=password
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_DISABLE_LOGIN_FORM=false
            - GF_ORG_NAME=Main Org.
            - GF_ORG_ROLE=viewer
        volumes:
            - grafana_data:/var/lib/grafana
        depends_on:
            - prometheus
        ports:
            - "3000:3000"
        restart: always
        networks:
          - prometheus_net
    alertmanager:
        container_name: alertmanager
        build: ./alertmanager
        command:
            - '--config.file=/alertmanager.yml'
        ports:
            - "9093:9093"
        restart: always
        networks:
          - prometheus_net
volumes:
    prometheus_data: {}
    grafana_data: {}
    dhparam_cache: {}
